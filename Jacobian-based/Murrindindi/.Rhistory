x1[i,1]*mult[1]
x1[i,2]*mult[2]
x1[i,3]*mult[3]
mult = c(2,	50,	0.002,	0.001015228,	0,	0)
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s/seed-2026/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x1=xy[,1:6]
x1
cbind(X,y)
head(cbind(X,y))
write.sv(cbind(X,y),'new_xy.csv')
write.csv(cbind(X,y),'new_xy.csv')
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s/seed-2025/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x1=xy[,1:6]
#save original output
y_original=xy$y
mult = c(2,	50,	0.002,	0.001015228,	0,	0)
#new output
for (i in seq(8000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(X)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
write.csv(cbind(X,y),'new_xy.csv')
write.csv(deriv,'1e-06.csv')
530*0.002
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mult = c(1,	50,	0.002,	0.001015228,	0.010526316,	0.1)
mult[1]
mult[2]
i=1
x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s/seed-2026/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x1=xy[,1:6]
#save original output
y_original=xy$y
mult = c(1,	50,	0.002,	0.001015228,	0.010526316,	0.1)
#new output
for (i in seq(8000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(X)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
write.csv(cbind(X,y),'new_xy.csv')
write.csv(deriv,'1e-06.csv')
deriv
i=1
source('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/Finite_difference_ihacres.R', echo=TRUE)
deriv
out
y
X
head(X)
X[1,1]
X[1001,1]
X[2001,1]
X[7001,1]
X[1,1]
X[1,1]
X[1001,1]
X[2001,1]
X[3001,1]
X[6,1]
X[1,7]
X[1,7]
X[1001,7]
X[1,7]
X[4001,7]
X[1,7]
X[6001,7]
X[1,7]
X[7001,7]
X[7001,]
X[6001,]
X[7001,]
X[1,]
X[1001,]
X[2001,]
X[3001,]
X[4001,]
X[5001,]
X[6001,]
X[7001,]
Kpar
obj1$parlist[4]
obj1$parlist$shape=NULL
obj1$parlist)
obj1$parlist
source('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/Finite_difference_ihacres.R', echo=TRUE)
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s - Copy/seed-2026/1e-06/')
xy = read.csv('xy.csv')
x1=xy[,1:6]
x1[1001,]
x1[1001,]
x1[2001,]
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s - Copy/seed-2026/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
x1=xy[,1:6]
x1[1,]
x1[1001,]
x1[2001,]
x1[3001,]
x1[1,]
x1[1001,]
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s - Copy/seed-2025/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x1=xy[,1:6]
x1[1,]
x1[1001,]
x1[2001,]
x1[4001,]
x1[5001,]
x1[3001,]
x1[4001,]
x1[5001,]
x1[5001:6000,]=NULL
x1 =rbind(x2[1:5000,],x2[6001:8000,]
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s - Copy/seed-2025/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x2=xy[,1:6]
x1 =rbind(x2[1:5000,],x2[6001:8000,])
y_original=xy$y
mult = c(1,	50,	0.002,	0.001015228,	0.010526316,	0.1)
#new output
for (i in seq(8000)){
i=1
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
colnames(deriv)=names(X)
summary(deriv)
x2[4001,]
x2[5001,]
rbind(x2[1,],x2[1001,],x2[2001,],x2[3001,],x2[4001,],x2[5001,],x2[6001,])
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s - Copy/seed-2025/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x2=xy[,1:6]
rbind(x2[1,],x2[1001,],x2[2001,],x2[3001,],x2[4001,],x2[5001,],x2[6001,])
x1 =rbind(x2[1:4000,],x2[5001:8000,])
#save original output
y_original=xy$y
mult = c(1,	50,	0.002,	0.001015228,	0.010526316,	0.1)
#new output
for (i in seq(8000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(X)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
write.csv(cbind(X,y),'new_xy.csv')
write.csv(deriv,'1e-06.csv')
deriv=as.data.frame(deriv)
y
for (i in seq(7000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(X)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
write.csv(cbind(X,y),'new_xy.csv')
write.csv(deriv,'1e-06.csv')
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s - Copy/seed-2025/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x2=xy[,1:6]
rbind(x2[1,],x2[1001,],x2[2001,],x2[3001,],x2[4001,],x2[5001,],x2[6001,])
x1 =rbind(x2[1:4000,],x2[5001:8000,])
#save original output
y_original=xy$y
mult = c(1,	50,	0.002,	0.001015228,	0.010526316,	0.1)
#new output
for (i in seq(7000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(X)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
write.csv(cbind(X,y),'new_xy.csv')
write.csv(deriv,'1e-06.csv')
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
y=[]
for (i in seq(7000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
y=0
for (i in seq(7000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(X)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
write.csv(cbind(X,y),'new_xy.csv')
write.csv(deriv,'1e-06.csv')
setwd('C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Test model/80s - Copy/seed-2026/1e-06/')
xy = read.csv('xy.csv')
xy$X=NULL
head(xy)
#collect parameter coordinates
x2=xy[,1:6]
rbind(x2[1,],x2[1001,],x2[2001,],x2[3001,],x2[4001,],x2[5001,],x2[6001,])
x1 =rbind(x2[1:4000,],x2[5001:8000,])
#save original output
y_original=xy$y
mult = c(1,	50,	0.002,	0.001015228,	0.010526316,	0.1)
#new output
y=0
for (i in seq(7000)){
y[i] = x1[i,1]*mult[1]+x1[i,2]*mult[2]+x1[i,3]*mult[3]+x1[i,4]*mult[4]+x1[i,5]*mult[5]+x1[i,6]*mult[6]
}
X=x1
Nsamp=1000
Kpar=6
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(X)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
write.csv(cbind(X,y),'new_xy.csv')
write.csv(deriv,'1e-06.csv')
y[1]
y[2]
y[3]
#RS of Sacramento
library('zoo')
library('hydromad')
library('xts')
library('stringr')
library(sensitivity)
#set up working directory
wd='C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Murrindindi/'
setwd(wd)
#read input
#read input
####################################
t_year='80s'           #target year for calibration
t_catchment='Murrindindi'  #target catchment
####################################
name_tspqe=str_c('C:/UserData/seol/Sensitivity Analyses/PQE input/',t_catchment,'/',t_catchment,'.csv')
tsPQE=read.zoo(name_tspqe,sep=',',header=TRUE)
tsPQE=as.xts(tsPQE)
head(tsPQE)
#sub-decades
ts80s <- tsPQE["1980-01-01::1989-12-31"]
ts90s <- tsPQE["1990-01-01::1999-12-31"]
ts00s <- tsPQE["2000-01-01::2009-12-31"]
years=c('70s','80s','90s','00s')
years=c('80s')
which_year = years[1]
no_seed =2025
hydromad.options(objective = hmadstat('RMSE'))
#load model property including parameter ranges
ts_which_year=get(str_c('ts',which_year))
# obj1  = hydromad(ts_which_year,sma='sacramento',routing=NULL,uztwm=c(15,150))
obj1 = hydromad(ts_which_year,sma='cmd',routing='expuh',
f=range(0.5,2.5),e=range(0.5,1.2),tau_s=range(5,1000), tau_q=range(0.5,10), v_s=range(0,1))
obj1$parlist$shape=NULL
set.seed(no_seed)
r0=matrix(data=runif(1000*length(obj1$parlist),0,1),nrow=1000,ncol=length(obj1$parlist))
Kpar = ncol(r0)           #number of parameter
Nsamp = nrow(r0)          #number of samples = 1,000
r1=matrix(data=NA,nrow=Nsamp,ncol=Kpar)
perts=c(1e-5,1e-6,1e-7)
scale_pert = perts[2]
for (j in 1:Kpar){
r1[r0[,j]>0.5,j]=r0[r0[,j]>0.5,j]-scale_pert
r1[r0[,j]<=0.5,j]=r0[r0[,j]<=0.5,j]+scale_pert
}
x0=matrix(NA,ncol=Kpar,nrow=Nsamp)
x1=matrix(NA,ncol=Kpar,nrow=Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
x0[rsamp,jpar]=qunif(r0[rsamp,jpar],obj1$parlist[[jpar]][1],obj1$parlist[[jpar]][2])
x1[rsamp,jpar]=qunif(r1[rsamp,jpar],obj1$parlist[[jpar]][1],obj1$parlist[[jpar]][2])
}
}
X2 = do.call(rbind, lapply(1:ncol(x0), function(i) {
X2i = x0
X2i[, i] = x1[, i]
X2i
}
X2 = do.call(rbind, lapply(1:ncol(x0), function(i) {
X2i = x0
X2i[, i] = x1[, i]
X2i
}))
X2 = do.call(rbind, lapply(1:ncol(x0), function(i) {
X2i = x0
X2i[, i] = x1[, i]
X2i
}))
X=rbind(x0,X2)
head(X)
names(obj1$parlist)
colnames(X)=names(obj1$parlist)#attach parlist header
head(X)
X
y=evalPars(X,obj1)
obj1$parlist
years=c('80s','90s','00s')
for (which_year in years[1]){
for (no_seed in 2025:2026){
#set up obj function
# hydromad.options(objective = ~hmadstat("r.squared")(Q, X)/(2-hmadstat("r.squared")(Q, X)))
hydromad.options(objective = hmadstat('RMSE'))
#load model property including parameter ranges
ts_which_year=get(str_c('ts',which_year))
# obj1  = hydromad(ts_which_year,sma='sacramento',routing=NULL,uztwm=c(15,150))
obj1 = hydromad(ts_which_year,sma='cmd',routing='expuh',
f=range(0.5,2.5),e=range(0.5,1.2),tau_s=range(5,1000), tau_q=range(0.5,10), v_s=range(0,1))
obj1$parlist$shape=NULL
#set up same seed number
set.seed(no_seed)
#generate random numbers on uniform distribution
r0=matrix(data=runif(1000*length(obj1$parlist),0,1),nrow=1000,ncol=length(obj1$parlist))
Kpar = ncol(r0)           #number of parameter
Nsamp = nrow(r0)          #number of samples = 1,000
r1=matrix(data=NA,nrow=Nsamp,ncol=Kpar)
#perturb random numbers to 1e-7
# perts=c(1e-1,1e-2,1e-3,1e-4,1e-5,1e-6,1e-7,1e-8)
perts=c(1e-5,1e-6,1e-7)
scale_pert = perts[2]
for (scale_pert in perts[2]){
print(  scale_pert)
#r0=x, r1=x+h
for (j in 1:Kpar){
r1[r0[,j]>0.5,j]=r0[r0[,j]>0.5,j]-scale_pert
r1[r0[,j]<=0.5,j]=r0[r0[,j]<=0.5,j]+scale_pert
}
x0=matrix(NA,ncol=Kpar,nrow=Nsamp)
x1=matrix(NA,ncol=Kpar,nrow=Nsamp)
#generate input matrix to be run on Sacramento
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
x0[rsamp,jpar]=qunif(r0[rsamp,jpar],obj1$parlist[[jpar]][1],obj1$parlist[[jpar]][2])
x1[rsamp,jpar]=qunif(r1[rsamp,jpar],obj1$parlist[[jpar]][1],obj1$parlist[[jpar]][2])
}
}
X2 = do.call(rbind, lapply(1:ncol(x0), function(i) {
X2i = x0
X2i[, i] = x1[, i]
X2i
}))
#final input matrix (sample coordinates) to be run on a model
X=rbind(x0,X2)
colnames(X)=names(obj1$parlist)#attach parlist header
head(X)
#run model and return model performance measures.
y=evalPars(X,obj1)
xy=cbind(X,y)
#all the derivatives
out <- as.numeric(y)
deriv=matrix(NA, ncol = Kpar, nrow = Nsamp)
for (rsamp in 1:Nsamp){
for (jpar in 1:Kpar){
idx.pert=Nsamp*jpar+rsamp
deriv[rsamp, jpar] = (out[idx.pert] - out[rsamp])/(X[idx.pert, jpar] - X[rsamp, jpar])
}
}
#attach header which indicates parameter names on the result matrix
colnames(deriv)=names(obj1$parlist)
summary(deriv)
summary(xy)
deriv=as.data.frame(deriv)
xy=as.data.frame(xy)
deriv$shape = NULL
xy$shape = NULL
dir.create(str_c(which_year,'/','seed-',no_seed,'/',scale_pert),recursive = TRUE)
#write derivates which is 1000X13 (Nsamp X Kpar) bvmatrix
write.csv(deriv,str_c(wd,which_year,'/','seed-',no_seed,'/',scale_pert,'/',scale_pert,'.csv'))
#coordinates and RMSE
write.csv(xy,str_c(wd,which_year,'/','seed-',no_seed,'/',scale_pert,'/','xy.csv'))
print(no_seed)
print(which_year)
print(str_c(which_year,'/','seed-',no_seed,'/',scale_pert))
}
}
}
a = matrix( c(1,2,3,4),ncol=2)
t(a)
a*t(a)
save.image("C:/UserData/seol/Sensitivity Analyses/IHACRES/Gradient using finite difference/Murrindindi/80s/r.RData")
